# POVME 2.0 Sample Input File

# First, we need to define a point field that entirely encompasses all trajectory pockets.
GridSpacing            1.0                                 # The distance, in Angstroms, between
                                                           # adjacent points. Making this number
                                                           # lower improves accuracy at the
                                                           # expense of compute time.

DefinePocketByLigand   adp                                 # Give the residue name for the
		       					   # ligand here.

							   
# Saving and loading the POVME points of the pocket-encompassing region.
SavePoints            true                                 # You can optionally save the point
                                                           # field to a PDB file. As you can
							   # imagine, identifying just the right set
							   # of inclusion and exclusion spheres and
							   # boxes to encompass the binding pocket
							   # is challenging. One approach is to
							   # define an initial geometry, visualize
							   # that geometry together with the protein
							   # using a program like VMD, and then
							   # iteratively add new inclusion and
							   # exclusion regions as required. The
							   # ability to save the points for
							   # visualization is helpful. Additionally,
                                                           # if your point field contains many
							   # points, generating the field may be
							   # computationally intensive. If you want
							   # to use the same field for multiple
							   # POVME runs, using a saved copy of the
							   # field rather than repeatedly generating
							   # it from scratch is more efficient. Note
							   # that POVME also saves a NPY file, which
							   # contains the same data as the PDB file
							   # but can be loaded much faster in
							   # subsequent POVME runs. The point-field
							   # PDB file is saved to
							   # {PREFIX}point_field.pdb (see
							   # OutputFilenamePrefix below).

							   # Additionally, if you specify a
							   # contiguous-pocket seed region (see
							   # ContiguousPocketSeedSphere and
							   # ContiguousPocketSeedBox below), POVME
							   # will also save those points to
							   # {PREFIX}contiguous_pocket_seed_points.pdb
							   # for visualization.

#LoadPointsFilename    points.pdb.npy                      # You can optionally load previous point
                                                           # fields if you don't want to generate
							   # them using the comamnds above. Note
							   # that you should use the .pdb.npy file,
							   # not the pdb file.

# Load the PDB trajectory file
PDBFileName                 1BYQ_every250.pdb              # Load in the PDB trajectory file with
                                                           # the pocket you want to analyze.

# Tell POVME how to identify points that are within the binding pocket.
DistanceCutoff              1.09                           # Any point that comes within this
                                                           # distance of any receptor atom's van der
							   # Waals surface will not be considered
							   # part of the pocket volume. 1.09
							   # Angstroms was chosen as the default
							   # value because that is the van der Waals
							   # radius of a hydrogen atom.

ConvexHullExclusion         false                          # The convex hull is a method of
                                                           # determining where a pocket "ends" on
                                                           # the outside of the protein. Portions
                                                           # of the inclusion region which lie
                                                           # outside of the convex hull are removed.
                                                           # In previous versions, this would be
                                                           # recalculated for each individual frame,
                                                           # however this led to significant numerical
                                                           # noise as the motion of the protein in
                                                           # different frames could radically redefine
                                                           # the convex hull. A consistent convex hull
                                                           # can now be used in all frames by giving
                                                           # the "first", "average", or "max" keywords
                                                           # here. "first" applied the convex hull from
                                                           # the first frame to all others. "average"
                                                           # averages the coordinates of each atom from
                                                           # all frames and wraps a convex hull around
                                                           # that. "max" draws a convex hull around all
                                                           # the frames superimposed simultaneously
                                                           # (and may take a while on large
                                                           # trajectories). To reproduce previous
                                                           # behavior, the "each" keyword may be used.
                                                           # Any other keyword will not use the convex
                                                           # hull exclusion method.



ContiguousPointsCriteria    3                              # Two pocket volumes are considered
                                                           # "contiguous" if they share at least
							   # this number neighboring points in
							   # common. Note that points that are
							   # "kitty-corner" from each other count
							   # as neighbors.

# Tell POVME how to perform the calculations.
NumProcessors               22                             # POVME can use multiple processors on
                                                           # Unix-based systems.


UseDiskNotMemory            false                          # In some cases, your PDB trajectory may
                                                           # be so large that the resulting POVME
							   # analysis cannot be easily stored in
							   # your computer's memory. If
							   # UseDiskNotMemory is set to true, POVME
							   # will rely more on your disk space than
							   # on memory/RAM.

# Tell POVME how to save the output
OutputFilenamePrefix          ./POVME_test_run/POVME_      # All the files POVME outputs will start
                                                           # with this prefix. POVME automatically
							   # creates any required directory
							   # (./POVME_test_run/ in this case).

SaveIndividualPocketVolumes   true                         # If true, POVME saves the pocket-volume
                                                           # points of each frame to a separate PDB
							   # file. The file names will be like
							   # {PREFIX}frame_X.pdb.

SavePocketVolumesTrajectory   true                         # If true, POVME saves all the pocket-
                                                           # volume points of each frame to a single
							   # PDB trajectory file. The individual
							   # frames are separated by END cards. The
							   # file name will be
							   # {PREFIX}volume_trajectory.pdb.

SavePocketVolumesNumpy       true                         # If true, POVME saves all the pocket-
                                                           # volume points of each frame to a single
							   # .npz file called {PREFIX}_frames.npz

OutputEqualNumPointsPerFrame  true                         # Some visualization programs (e.g. VMD)
                                                           # are only compatible with trajectories
							   # that have the same number of atoms in
							   # each frame. If EqualNumAtomsPerFrame is
							   # true, POVME adds extra points at the
							   # origin (0.0, 0.0, 0.0) to satisfy this
							   # requirement. This affects files created
							   # with both SaveIndividualPocketVolumes
							   # and SavePocketVolumesTrajectory but
							   # does not alter the volume calculation
							   # itself.

SaveTabbedVolumeFile          true                         # If true, POVME saves the calculated
                                                           # volumes to a file in a simple tabular
							   # format that can be easily pasted into
							   # popular spreadsheet programs like
                               # Microsoft Excel. The file is named
                               # {PREFIX}volumes.tabbed.txt

SaveVolumetricDensityDX       true                         # If true, POVME saves a volumetric
                                                           # density map in the DX format. A
							   # volumetric density value is associated
                               # with each of the pocket-occupying
							   # points by calculating the fraction of
							   # all trajectory pocket volumes that
							   # include the given point. The file is
                               # named {PREFIX}volumetric_density.dx.

SaveVolumetricDensityNpy      true                         # If true, POVME saves a volumetric
                                                           # density map in the numpy (.npy)
                               # format. This option is more useful for numerical analysis
                               # of volumetric density maps.

CompressOutput                true                         # If you're short on disk space, POVME
                                                           # can automatically compress all output
							   # files using gz compression.

